import { Box, Heading, Stack, Text, useBreakpointValue } from '@chakra-ui/react'

const textColor = 'gray.600'
const darkTextColor = 'gray.400'
const contentWidth = 300

interface DisplayColumnProps {
  children?: React.ReactNode
}
const DisplayColumn = ({ children }: DisplayColumnProps) => {
  return (
    <Box>
      <Box minW={contentWidth} maxW={contentWidth} m="0 auto">
        {children}
      </Box>
    </Box>
  )
}

interface SectionProps {
  isMobile: boolean
}
const Abilities = ({ isMobile }: SectionProps) => {
  return (
    <Stack direction={isMobile ? 'column' : 'row'} spacing={4}>
      <Box>
        <Heading as="h2" size="lg" mb={2}>
          Abilities
        </Heading>
        <Text color={textColor} _dark={{ color: darkTextColor }}>
          Along with your weapons characteristics, add various abilities in
          order to replicate the vast array of unit rules present in the game.
        </Text>
        <br />
        <Text color={textColor} _dark={{ color: darkTextColor }}>
          You can also add various abilities to the target opponent in order to
          build comparisons for a larger variety of scenarios.
        </Text>
      </Box>
      <DisplayColumn>
        <Stack
          fontSize="sm"
          spacing={2}
          color={textColor}
          _dark={{ color: darkTextColor }}
        >
          <Box borderWidth="1px" borderRadius="md" p={2}>
            <Text>
              Deal <em>D6</em> Mortal Wounds on a <em>hit</em> roll of{' '}
              <em>3+</em>
            </Text>
          </Box>
          <Box borderWidth="1px" borderRadius="md" p={2}>
            <Text>
              Reroll failed <em>wound</em> rolls
            </Text>
          </Box>
          <Box borderWidth="1px" borderRadius="md" p={2}>
            <Text>
              <em>Unmodified</em> rolls of <em>6+</em> deal <em>2</em> mortal
              wounds
            </Text>
          </Box>
          <Box borderWidth="1px" borderRadius="md" p={2}>
            <Text>
              Ignore wounds and mortal wounds on a roll of <em>6+</em>
            </Text>
          </Box>
        </Stack>
      </DisplayColumn>
    </Stack>
  )
}

const AverageDamage = ({ isMobile }: SectionProps) => {
  return (
    <Stack direction={isMobile ? 'column-reverse' : 'row'} spacing={4}>
      <DisplayColumn>
        <Box minH={200} borderWidth="1px" borderRadius="md" />
      </DisplayColumn>
      <Box>
        <Heading as="h2" size="lg" mb={2}>
          Average Damage Comparisons
        </Heading>
        <Text color={textColor} _dark={{ color: darkTextColor }}>
          Gather the average damage that each unit is expected to do against
          each possible save.
        </Text>
        <br />
        <Text color={textColor} _dark={{ color: darkTextColor }}>
          This average is a calculated value (not done through rolling).
        </Text>
      </Box>
    </Stack>
  )
}

const SimulatedDamage = ({ isMobile }: SectionProps) => {
  return (
    <Stack direction={isMobile ? 'column' : 'row'} spacing={4}>
      <Box>
        <Heading as="h2" size="lg" mb={2}>
          Simulated Damage Comparisons
        </Heading>
        <Text color={textColor} _dark={{ color: darkTextColor }}>
          Get further statistics, for example discrete and cumulative
          probability graphs, generated by running a large number of
          simulations.
        </Text>
      </Box>
      <DisplayColumn>
        <Box minH={200} borderWidth="1px" borderRadius="md" />
      </DisplayColumn>
    </Stack>
  )
}

const Features = () => {
  const isMobile = useBreakpointValue({ base: true, md: false })

  return (
    <Stack spacing={24} maxW="4xl" pb={4}>
      <Abilities isMobile={!!isMobile} />
      <AverageDamage isMobile={!!isMobile} />
      <SimulatedDamage isMobile={!!isMobile} />
    </Stack>
  )
}

export default Features
